{"version":3,"file":"static/js/387.2a0b206a.chunk.js","mappings":"kTAUMA,EAAW,gCACXC,EAAU,mCAEHC,EAAkB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAmDC,IAD5C,cACxBG,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qDAKlBC,EAAoB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAe,IAAIC,gBAAgB,CACrCC,eAAe,EACfC,SAAU,QACVC,KAAM,EACNL,MAAOA,EACPM,QAASb,IANmB,SASTE,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAAqCS,IAT5B,cAS1BL,EAT0B,yBAUzBA,EAASC,KAAKC,SAVW,2CAAH,sDAapBS,EAAiB,mCAAG,WAAOC,GAAP,uFACNb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BgB,EAA9B,oBAA4Cf,EAA5C,oBADM,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBY,EAAc,mCAAG,WAAOD,GAAP,uFACHb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BgB,EAA9B,4BAAoDf,EAApD,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,KAAKa,MAFK,2CAAH,sDAkBdC,EAAgB,mCAAG,WAAOH,GAAP,uFACLb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BgB,EAA9B,4BAAoDf,EAApD,oBADK,cACtBG,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qD,6KCpDhBc,EAAcC,EAAAA,EAAAA,GAAH,6YAyBXC,EAAeD,EAAAA,EAAAA,IAAH,oI,SCqBzB,EA1CgB,WACZ,OAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,6FACIH,GAAa,GADjB,mBAGoCV,EAAAA,EAAAA,IAAiBW,GAHrD,UAIqC,KADvBG,EAHd,QAI0BC,OAJ1B,uBAKkBR,EAAQ,IAAIS,MAAM,qDACxBR,EAASD,GANrB,0BASQD,EAAeQ,GATvB,kDAWQN,EAAS,EAAD,IAXhB,yBAaQE,GAAa,GAbrB,sFAFY,0DACZO,EAiBH,GAAE,CAACN,KAGA,gCACKJ,IAAS,SAACJ,EAAD,UAAc,sDACvBM,IAAa,SAACS,EAAA,EAAD,KACd,SAACjB,EAAD,UACKI,EAAYc,KAAI,gBAAGtB,EAAH,EAAGA,GAAIuB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACb,2BACI,0BAAI,WAASD,MACb,uBAAIC,MAFCxB,EADI,QAShC,C","sources":["API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4bf7f5d1496efdab827169a7539a0778';\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchMoviesWithQuery = async (query) => {\n    const searchParams = new URLSearchParams({\n        include_adult: false,\n        language: 'en-US',\n        page: 1,\n        query: query,\n        api_key: API_KEY,\n    });\n\n    const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YmY3ZjVkMTQ5NmVmZGFiODI3MTY5YTc1MzlhMDc3OCIsInN1YiI6IjY0NzEyN2RhZGQ3MzFiMDExNzhlYzZlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RrkdZNtfUqvCldRS1DqYNffe8qOP4511snz_qPb9ze0'\n//   }\n// };\n\n// fetch('https://api.themoviedb.org/3/movie/447277/reviews?language=en-US&page=1', options)\n//   .then(response => response.json())\n//   .then(response => console.log(response))\n//   .catch(err => console.error(err));\n\nexport const fetchMovieReview = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    return response.data.results;\n};\n\n// class FetchTheMovieDbAPI {\n//     #period = 'day';\n//     #BASE_URL = 'https://api.themoviedb.org/3/';\n//     #API_KEY = '4bf7f5d1496efdab827169a7539a0778';\n//     poster_sizes = ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'];\n\n//     search = null;\n//     page = 1;\n\n//     async fetchPopMovies() {\n//         try {\n//         return await axios.get(\n//             `${this.#BASE_URL}trending/movie/${this.#period}?api_key=${this.#API_KEY}&page=${this.page}`\n//         );\n//         } catch (error) {\n//         throw new Error(error.message);\n//         }\n//     };\n\n//     async fetchMovie(searchQuery) {\n//         try {\n//             const response = await axios.get(`${this.#BASE_URL}/search/movie?api_key=${this.#API_KEY}&language=en-US&page=${this.page}&query=${searchQuery}`);\n//             return response.data;\n//         } catch (error) {\n//             throw new Error(error.message);\n//         };\n//     };\n// }\n\n// export const api = new FetchTheMovieDbAPI();","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\nmargin-top: 10px;\n    display: flex;\n    gap: 15px;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    margin-bottom: 20px;\n\n> li {\n    margin-top: 18px;\n    \n}\n> li > h4 {\n    margin-bottom: 5px;\n    font-size: 16px;\n}\n\n> li > p {\n    max-width: 1200px;\n    font-size: 16px;\n    color: var(--primary-text-color);\n}\n`;\n\nexport const ErrorHandler = styled.div`\n    margin-top: 18px;\n    margin-left: 15px;\n    font-size: 16px;\n    color: var(--primary-text-color);\n`;\n","import { fetchMovieReview } from \"API\";\nimport Loader from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ErrorHandler, ReviewsList } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const [movieReview, setMovieReview] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        fetchReviews();\n        async function fetchReviews() {\n            setIsLoading(true);\n            try {\n                const responseMovie = await fetchMovieReview(movieId);\n                if (responseMovie.length === 0) {\n                    const error = new Error('Sorry, we do not have any reviews for this movie.')\n                    setError(error);\n                    return;\n                };\n                setMovieReview(responseMovie);\n            } catch (error) {\n                setError(error);\n            } finally {\n                setIsLoading(false);\n            };\n        };\n    }, [movieId]);\n\n    return (\n        <>\n            {error && <ErrorHandler>Sorry, we do not have any reviews for this movie.</ErrorHandler>}\n            {isLoading && <Loader />}\n            <ReviewsList>\n                {movieReview.map(({ id, author, content}) => (\n                    <li key={id}>\n                        <h4>Author: {author}</h4>\n                        <p>{content}</p>\n                    </li>\n                ))}\n            </ReviewsList>\n        </>\n    );\n};\n\nexport default Reviews;"],"names":["BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchMoviesWithQuery","query","searchParams","URLSearchParams","include_adult","language","page","api_key","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReview","ReviewsList","styled","ErrorHandler","useState","movieReview","setMovieReview","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","responseMovie","length","Error","fetchReviews","Loader","map","author","content"],"sourceRoot":""}