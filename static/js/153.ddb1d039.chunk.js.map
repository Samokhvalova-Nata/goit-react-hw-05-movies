{"version":3,"file":"static/js/153.ddb1d039.chunk.js","mappings":"kTAUMA,EAAW,gCACXC,EAAU,mCAEHC,EAAkB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAmDC,IAD5C,cACxBG,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qDAKlBC,EAAoB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAe,IAAIC,gBAAgB,CACrCC,eAAe,EACfC,SAAU,QACVC,KAAM,EACNL,MAAOA,EACPM,QAASb,IANmB,SASTE,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAAqCS,IAT5B,cAS1BL,EAT0B,yBAUzBA,EAASC,KAAKC,SAVW,2CAAH,sDAapBS,EAAiB,mCAAG,WAAOC,GAAP,uFACNb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BgB,EAA9B,oBAA4Cf,EAA5C,oBADM,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBY,EAAc,mCAAG,WAAOD,GAAP,uFACHb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BgB,EAA9B,4BAAoDf,EAApD,oBADG,cACpBG,EADoB,yBAEnBA,EAASC,KAAKa,MAFK,2CAAH,sDAkBdC,EAAgB,mCAAG,WAAOH,GAAP,uFACLb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BgB,EAA9B,4BAAoDf,EAApD,oBADK,cACtBG,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qD,yMCnDhBc,EAAOC,EAAAA,EAAAA,IAAH,iMASJC,EAAQD,EAAAA,EAAAA,IAAH,sEAKLE,EAAOF,EAAAA,EAAAA,IAAH,2SAoBJG,EAAUH,EAAAA,EAAAA,IAAH,2OAiBPI,GAAUJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,6jB,SCgBpB,EA7DkB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KACTC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,YAAaC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OAE9CC,EAAYJ,EAAW,0CACQA,GANrC,6EAiBMK,EAAOC,KAAKC,MAAsB,GAAfN,GAEzB,OACI,6BACI,UAACV,EAAD,YACI,SAACE,EAAD,CAAOe,IAAKJ,EAAWK,IAAKV,EAAOW,MAAO,OAC1C,UAAChB,EAAD,YACI,wBAAKK,KACL,yBAAG,eAAaM,EAAK,QACrB,wBAAI,cACJ,uBAAIH,KACJ,wBAAI,YACJ,uBApBE,SAACC,GACf,GAAIA,EAGA,OAFmBA,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAI/D,CAcmBC,CAAUZ,YAGtB,UAACR,EAAD,YACI,wBAAI,4BACJ,2BACI,yBACI,SAACC,EAAD,CAASoB,GAAG,OAAZ,SAAoB,YAExB,yBACI,SAACpB,EAAD,CAASoB,GAAG,UAAZ,SAAuB,kBAG/B,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,WAKnB,ECpDYC,GAAW5B,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,qkBC8CrB,EAxCsB,WAAO,IAAD,IACxB,GAAwC6B,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAuBpD,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,6FACIT,GAAa,GADjB,mBAGoCzC,EAAAA,EAAAA,IAAkB0C,GAHtD,UAKqC,KAFvBS,EAHd,QAK0BC,OAL1B,uBAMkBd,EAAQ,IAAIe,MAAM,8DACxBd,EAASD,GAPrB,0BAUQD,EAAgBc,GAVxB,kDAYQZ,EAAS,EAAD,IAZhB,yBAcAE,GAAa,GAdb,sFAFY,0DACZa,EAkBH,GAAE,CAACZ,KAGA,gCACKJ,GAASiB,EAAAA,OAAAA,QAAA,UAAkBjB,EAAMkB,WAClC,SAACtB,EAAD,CAAUJ,GAAIgB,EAAaW,QAA3B,SAAoC,SACnCjB,IAAa,SAACP,EAAA,EAAD,KACd,SAAC,EAAD,CAAWrB,KAAMwB,MAG5B,C","sources":["API.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MoviesDetails.styled.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4bf7f5d1496efdab827169a7539a0778';\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchMoviesWithQuery = async (query) => {\n    const searchParams = new URLSearchParams({\n        include_adult: false,\n        language: 'en-US',\n        page: 1,\n        query: query,\n        api_key: API_KEY,\n    });\n\n    const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YmY3ZjVkMTQ5NmVmZGFiODI3MTY5YTc1MzlhMDc3OCIsInN1YiI6IjY0NzEyN2RhZGQ3MzFiMDExNzhlYzZlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RrkdZNtfUqvCldRS1DqYNffe8qOP4511snz_qPb9ze0'\n//   }\n// };\n\n// fetch('https://api.themoviedb.org/3/movie/447277/reviews?language=en-US&page=1', options)\n//   .then(response => response.json())\n//   .then(response => console.log(response))\n//   .catch(err => console.error(err));\n\nexport const fetchMovieReview = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    return response.data.results;\n};\n\n// class FetchTheMovieDbAPI {\n//     #period = 'day';\n//     #BASE_URL = 'https://api.themoviedb.org/3/';\n//     #API_KEY = '4bf7f5d1496efdab827169a7539a0778';\n//     poster_sizes = ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'];\n\n//     search = null;\n//     page = 1;\n\n//     async fetchPopMovies() {\n//         try {\n//         return await axios.get(\n//             `${this.#BASE_URL}trending/movie/${this.#period}?api_key=${this.#API_KEY}&page=${this.page}`\n//         );\n//         } catch (error) {\n//         throw new Error(error.message);\n//         }\n//     };\n\n//     async fetchMovie(searchQuery) {\n//         try {\n//             const response = await axios.get(`${this.#BASE_URL}/search/movie?api_key=${this.#API_KEY}&language=en-US&page=${this.page}&query=${searchQuery}`);\n//             return response.data;\n//         } catch (error) {\n//             throw new Error(error.message);\n//         };\n//     };\n// }\n\n// export const api = new FetchTheMovieDbAPI();","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n    display: flex;\n    gap: 20px;\n    // justify-content: space-between;\n    // align-items: center;\n    padding-bottom: 26px;\n    border-bottom: 1px solid black;\n`;\n\nexport const Image = styled.img`\n    display: block;\n    border-radius: 5px;\n`;\n\nexport const Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n\n    > h1 {\n        font-size: 30px;\n    }\n\n    > p {\n        max-width: 800px;\n        font-size: 16px;\n        color: var(--primary-text-color);\n    }\n\n    > h3 {\n        font-size: 20px;\n    }\n`;\n\nexport const AddInfo = styled.div`\nmargin-top: 15px;\ntext-align: center;\n\n> h3 {\n    margin-bottom: 15px;\n}\n> ul {\n    margin-top: 10px;\n    display: flex;\n    gap: 15px;\n    \n    justify-content: center;\n    align-items: center;\n}\n`;\n\nexport const AddLink = styled(Link)`\ntext-decoration: none;\n    display: block;\n    margin-bottom: 15px;\n    outline: 1px solid var(--accent-color);\n    // background-color: var(--accent-color);\n    border-radius: 5px;\n    width: 60px;\n    padding: 4px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 14px;\n    color: black;\n\n    transition: transform var(--transition), background-color var(--transition);\n    \n    &:hover,\n    &:focus {\n        transform: scale(1.05);\n        background-color: var(--accent-color);\n        // color: #ffffff;\n    }\n`;","// import PropTypes from 'prop-types';\nimport { Outlet,  } from \"react-router-dom\";\nimport { AddInfo, AddLink, Image, Info, Wrap } from \"./MovieCard.styled\";\nimport { Suspense } from \"react\";\nimport Loader from \"components/Loader/Loader\";\n\nconst DEFAULT_POSTER_URL =\n    'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nconst MovieCard = ({ info }) => {\n    const { title, poster_path, vote_average, overview, genres } = info;\n\n    const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n    : DEFAULT_POSTER_URL;\n    \n    const getGenres = (genres) => {\n        if (genres) {\n            const genresList = genres.map(genre => genre.name).join(', ');\n            // console.log('genresList', genresList);\n            return genresList;\n        } return;\n    };\n\n    const vote = Math.round((vote_average * 10));\n    \n    return (\n        <main>\n            <Wrap>\n                <Image src={posterUrl} alt={title} width={342} />\n                <Info>\n                    <h1>{title}</h1>\n                    <p>User Score: {vote}%</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{getGenres(genres)}</p>\n                </Info>\n            </Wrap>\n            <AddInfo>\n                <h3>Additional information</h3>\n                <ul>\n                    <li>\n                        <AddLink to=\"cast\" >Cast</AddLink>\n                    </li>\n                    <li>\n                        <AddLink to=\"reviews\" >Reviews</AddLink>\n                    </li>\n                </ul>\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </AddInfo>\n        </main>\n    );\n};\n\n// MovieCard.propTypes = {\n//     info: PropTypes.objectOf(PropTypes.shape({\n//         title: PropTypes.string,\n//         poster_path: PropTypes.string,\n//         vote_average: PropTypes.number,\n//         overview: PropTypes.string,\n//         genres: PropTypes.arrayOf(\n//         PropTypes.shape({\n//         name: PropTypes.string,\n//         })),\n//     }))\n// };\n\nexport default MovieCard;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n    text-decoration: none;\n    display: block;\n    margin-bottom: 20px;\n    outline: 1px solid var(--accent-color);\n    // background-color: var(--accent-color);\n    border-radius: 5px;\n    width: 60px;\n    padding: 4px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 14px;\n    color: black;\n\n    transition: transform var(--transition), background-color var(--transition);\n    \n    &:hover,\n    &:focus {\n        transform: scale(1.05);\n        // color: #ffffff;\n        background-color: var(--accent-color);\n    }\n    `;","import { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Notify } from \"notiflix\";\nimport { fetchMovieDetails } from \"API\";\nimport Loader from \"components/Loader/Loader\";\nimport MovieCard from \"components/MovieCard/MovieCard\";\nimport { BackLink } from \"./MoviesDetails.styled\";\n\n\nconst MoviesDetails = () => {\n    const [movieDetails, setMovieDetails] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? \"/\");\n\n    useEffect(() => {\n        fetchhMoviesInfo();\n        async function fetchhMoviesInfo() {\n            setIsLoading(true);\n            try {\n                const responseMovie = await fetchMovieDetails(movieId);\n\n                if (responseMovie.length === 0) {\n                    const error = new Error('Sorry, there is no info about movie you are searching for.')\n                    setError(error);\n                    return;\n                };\n                setMovieDetails(responseMovie);\n            } catch (error) {\n                setError(error);\n            } finally {\n        setIsLoading(false);\n        };\n        };\n    }, [movieId])\n\n    return (\n        <>\n            {error && Notify.failure(`${error.message}`)}\n            <BackLink to={backLinkHref.current}>Back</BackLink>\n            {isLoading && <Loader />}\n            <MovieCard info={movieDetails} />\n        </>\n    );\n};\n\nexport default MoviesDetails;"],"names":["BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchMoviesWithQuery","query","searchParams","URLSearchParams","include_adult","language","page","api_key","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReview","Wrap","styled","Image","Info","AddInfo","AddLink","Link","info","title","poster_path","vote_average","overview","genres","posterUrl","vote","Math","round","src","alt","width","map","genre","name","join","getGenres","to","Suspense","fallback","Loader","BackLink","useState","movieDetails","setMovieDetails","error","setError","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","responseMovie","length","Error","fetchhMoviesInfo","Notify","message","current"],"sourceRoot":""}