{"version":3,"file":"static/js/83.3091524c.chunk.js","mappings":"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","sources":["API.js","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4bf7f5d1496efdab827169a7539a0778';\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchMoviesWithQuery = async (query) => {\n    const searchParams = new URLSearchParams({\n        include_adult: false,\n        language: 'en-US',\n        page: 1,\n        query: query,\n        api_key: API_KEY,\n    });\n\n    const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\n\nexport const fetchMovieReview = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    return response.data.results;\n};\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesItem = styled.li`\n    flex-basis: calc((100% - 3 * (30px)) / 4); \n    border-radius: 5px;\n    background-color: #ffffff;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.08), 0px 3px 3px rgba(0, 0, 0, 0.02), 1px 3px 4px rgba(0, 0, 0, 0.08);\n\n    transition: box-shadow var(--transition), transform var(--transition);\n    &:hover,\n    &:focus {\n        box-shadow: var(--card-shadow);\n        transform: scale(1.02);\n    }\n`;\n\nexport const ItemLink = styled(Link)`\n    text-decoration: none;\n`;\n\nexport const Image = styled.img`\n    width: 100%;\n    display: block;\n    object-fit: cover;\n    border-radius: 5px;\n\n    transition: var(--transition);\n    &:hover,\n    &:focus {\n        border-bottom-left-radius: 0px;\n        border-bottom-right-radius: 0px;\n    }\n`;\n\nexport const Info = styled.p`\n    height: 36px;\n    font-weight: 500;\n    font-size: 14px;\n    padding-top: 12px;\n    padding-left: 8px;\n    padding-right: 8px;\n    padding-bottom: 12px;\n    color: var(--primary-text-color);\n    text-transform: uppercase;\n    line-height: 1.16;\n    text-align: center;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\nimport { Image, Info, ItemLink, MoviesItem } from './MoviesListItem.styled';\n\nconst DEFAULT_POSTER_URL =\n    'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nconst MoviesListItem = ({ id, url, title }) => {\n    const location = useLocation();\n\n    return (\n        <MoviesItem>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n                <Image src={url ? `https://image.tmdb.org/t/p/w342/${url}` : DEFAULT_POSTER_URL} alt={title} loading=\"lazy\" />\n                <Info>{title}</Info>\n            </ItemLink>\n        </MoviesItem>\n    );\n};\n\nMoviesListItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string,\n};\n\nexport default MoviesListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    margin-bottom: 30px;\n`;","import PropTypes from 'prop-types';\nimport MoviesListItem from \"components/MoviesListItem/MoviesListItem\";\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n    return (\n        <List>\n            {movies.map(({ id, title, poster_path}) => (\n                <MoviesListItem\n                    key={id}\n                    id={id}\n                    title={title}\n                    url={poster_path} />\n            ))}\n        </List>\n    );\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.array,\n};\n\nexport default MoviesList;","import styled from '@emotion/styled';\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Form = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    margin-top: 24px;\n    margin-bottom: 24px;\n    outline: transparent;\n    transition: outline var(--transition);\n\n    &:hover,\n    & focus {\n        outline: 1px solid black;\n    }\n`;\n\nexport const Input = styled.input`\n    outline: transparent;\n    height: 35px;\n    flex-grow: 1;\n    font-size: 16px;\n    padding-left: 15px;\n    border: 0;\n    border-top-left-radius: 3px;\n    border-bottom-left-radius: 3px;\n`;\n\nexport const Button = styled.button`\n    display: inline-block;\n    width: 36px;\n    height: 37px;\n    border: 0;\n    // opacity: 0.5;\n    transition: var(--transition);\n    cursor: pointer;\n    outline: none;\n    background-color: var(--accent-color);\n\n    &:hover,\n    & focus {\n        // opacity: 1;\n    }\n`;\n\nexport const SearchIcon = styled(HiSearch)`\n    // width: 20px;\n    // height: 20px;\n    transition: transform var(--transition);\n    &:hover {\n        color: #ffffff;\n        transform: scale(1.2);\n    }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { Form, Input, Button, SearchIcon } from \"./SearchBox.styled\"\nimport { Notify } from \"notiflix\";\n\nconst SearchBox = ({ value, onSubmit }) => {\n    const [query, setQuery] = useState(value);\n\n    const handleInputChange = e => setQuery(e.currentTarget.value);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            Notify.failure('Sorry, enter something in search line.');\n            return;\n        }\n        onSubmit(query);\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Input autoComplete=\"off\"\n                type=\"text\"\n                value={query}\n                onChange={handleInputChange}\n                autoFocus\n                placeholder=\"Search movie\" />\n            <Button type=\"submit\" aria-label=\"Search\">\n                <SearchIcon size={20} />\n            </Button>\n        </Form>\n    )\n};\n\nSearchBox.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    value: PropTypes.string,\n};\n\nexport default SearchBox;\n","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Notify } from \"notiflix\";\nimport { fetchMoviesWithQuery } from '../API';\nimport Loader from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport SearchBox from \"components/SearchBox/SearchBox\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n\n    useEffect(() => {\n        if (query) fetchSearchMovies();\n\n        async function fetchSearchMovies() {\n            setIsLoading(true);\n            try {\n                const responseMovies = await fetchMoviesWithQuery(query);\n\n                if (responseMovies.length === 0) {\n                    const error = new Error('Sorry, there are no movies matching your search query.')\n                    setError(error);\n                    return;\n                };\n\n                setMovies(responseMovies);\n            } catch (error) {\n                setError(error);\n            } finally {\n        setIsLoading(false);\n        };\n        };\n    }, [query])\n    \n    const updateQueryString = searchQuery => {\n        if (searchQuery === query) {\n        Notify.failure(`This word has already been searched for. Try another one.`)\n        return;\n        };\n        setSearchParams({ query: searchQuery });\n    };\n\n    return (\n        <main>\n            {error && Notify.failure(`${error.message}`)}\n            <SearchBox value={query} onSubmit={updateQueryString} />\n            {isLoading && <Loader />}\n            <MoviesList movies={movies} />\n        </main>\n    );\n};\n\nexport default Movies;"],"names":["BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchMoviesWithQuery","query","searchParams","URLSearchParams","include_adult","language","page","api_key","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReview","MoviesItem","styled","ItemLink","Link","Image","Info","url","title","location","useLocation","to","state","from","src","alt","loading","List","movies","map","poster_path","Form","Input","Button","SearchIcon","HiSearch","value","onSubmit","useState","setQuery","e","preventDefault","trim","Notify","autoComplete","type","onChange","currentTarget","autoFocus","placeholder","size","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","setSearchParams","get","useEffect","responseMovies","length","Error","fetchSearchMovies","message","searchQuery","Loader","MoviesList"],"sourceRoot":""}